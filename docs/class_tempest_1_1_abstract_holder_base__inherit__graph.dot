digraph "Tempest::AbstractHolderBase"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{Tempest::AbstractHolderBase\n|# m_device\l|+ AbstractHolderBase()\l+ AbstractHolderBase()\l+ ~AbstractHolderBase()\l+ operator=()\l+ device()\l+ device()\l# reset()\l# restore()\l# presentEvent()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{Tempest::AbstractHolder\l\< ShaderProgram, AbstractAPI\l::ProgramObject \>\n|# references\l# pool\l|+ makeManip()\l# AbstractHolder()\l# deleteObject()\l# reset()\l# reset()\l# restore()\l# restore()\l# copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder.html"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Tempest::ShaderProgramHolder\n||+ ShaderProgramHolder()\l+ ~ShaderProgramHolder()\l+ compile()\l+ load()\l+ surfaceShader()\l# deleteObject()\l# reset()\l# restore()\l# copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_shader_program_holder.html"];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Tempest::AbstractHolder\l\< Tempest::IndexBufferBase,\l AbstractAPI::IndexBuffer \>\n|# references\l# pool\l|+ makeManip()\l# AbstractHolder()\l# deleteObject()\l# reset()\l# reset()\l# restore()\l# restore()\l# copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder.html"];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Tempest::IndexBufferHolder\n||+ IndexBufferHolder()\l+ ~IndexBufferHolder()\l+ load()\l+ load()\l# createObject()\l# deleteObject()\l# allocBuffer()\l# allocBuffer()\l# reset()\l# restore()\l# copy()\l# lockBuffer()\l# unlockBuffer()\l# updateBuffer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_index_buffer_holder.html"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Tempest::LocalBufferHolder\l\< Tempest::IndexBufferHolder \>\n|# reserveSize\l# maxReserved\l# minVboSize\l|+ LocalBufferHolder()\l+ ~LocalBufferHolder()\l+ setMaxCollectIterations()\l+ maxCollectIterations()\l+ setReserveSize()\l+ setMaxReservedCount()\l+ maxReservedCount()\l+ pauseCollect()\l+ isCollectPaused()\l# reset()\l# restore()\l# presentEvent()\l# deleteObject()\l# deleteCond()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_local_buffer_holder.html"];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Tempest::LocalIndexBuffer\lHolder\n||+ LocalIndexBufferHolder()\l+ LocalIndexBufferHolder()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_tempest_1_1_local_index_buffer_holder.html"];
  Node0 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Tempest::AbstractHolder\l\< Tempest::Texture2d,\l AbstractAPI::Texture \>\n|# references\l# pool\l|+ makeManip()\l# AbstractHolder()\l# deleteObject()\l# reset()\l# reset()\l# restore()\l# restore()\l# copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder.html"];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{Tempest::AbstractHolderWith\lLoad\< Tempest::Texture2d,\l AbstractAPI::Texture \>\n||+ AbstractHolderWithLoad()\l+ load()\l+ load()\l+ load()\l+ load()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder_with_load.html"];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{Tempest::TextureHolder\n||+ TextureHolder()\l+ ~TextureHolder()\l+ create()\l+ create()\l+ create()\l+ load()\l+ load()\l+ load()\l+ load()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# recreateObject()\l# deleteObject()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_texture_holder.html"];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{Tempest::LocalTexturesHolder\n||+ LocalTexturesHolder()\l+ ~LocalTexturesHolder()\l+ setMaxCollectIterations()\l+ maxCollectIterations()\l+ setMaxReservedCount()\l+ maxReservedCount()\l+ pauseCollect()\l+ isCollectPaused()\l# reset()\l# restore()\l# presentEvent()\l# deleteObject()\l# deleteCond()\l# onMipmapsAdded()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_local_textures_holder.html"];
  Node0 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{Tempest::AbstractHolder\l\< Tempest::Texture3d,\l AbstractAPI::Texture \>\n|# references\l# pool\l|+ makeManip()\l# AbstractHolder()\l# deleteObject()\l# reset()\l# reset()\l# restore()\l# restore()\l# copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder.html"];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{Tempest::VolumeHolder\n||+ VolumeHolder()\l+ ~VolumeHolder()\l+ load()\l+ create()\l# createObject()\l# deleteObject()\l# reset()\l# restore()\l# copy()\l# setTextureFlag()\l# hasCPUStorage()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_volume_holder.html"];
  Node0 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{Tempest::AbstractHolder\l\< Tempest::VertexBufferBase,\l AbstractAPI::VertexBuffer \>\n|# references\l# pool\l|+ makeManip()\l# AbstractHolder()\l# deleteObject()\l# reset()\l# reset()\l# restore()\l# restore()\l# copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder.html"];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{Tempest::VertexBufferHolder\n||+ VertexBufferHolder()\l+ ~VertexBufferHolder()\l+ load()\l+ load()\l# createObject()\l# deleteObject()\l# allocBuffer()\l# allocBuffer()\l# reset()\l# restore()\l# copy()\l# lockBuffer()\l# bufferData()\l# unlockBuffer()\l# updateBuffer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_vertex_buffer_holder.html"];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{Tempest::LocalBufferHolder\l\< Tempest::VertexBufferHolder \>\n|# reserveSize\l# maxReserved\l# minVboSize\l|+ LocalBufferHolder()\l+ ~LocalBufferHolder()\l+ setMaxCollectIterations()\l+ maxCollectIterations()\l+ setReserveSize()\l+ setMaxReservedCount()\l+ maxReservedCount()\l+ pauseCollect()\l+ isCollectPaused()\l# reset()\l# restore()\l# presentEvent()\l# deleteObject()\l# deleteCond()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_local_buffer_holder.html"];
  Node15 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node16 [label="{Tempest::LocalVertexBuffer\lHolder\n||+ LocalVertexBufferHolder()\l+ LocalVertexBufferHolder()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_tempest_1_1_local_vertex_buffer_holder.html"];
  Node0 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 [label="{Tempest::AbstractHolder\l\< Data, APIDescriptor \>\n|# references\l# pool\l|+ makeManip()\l# AbstractHolder()\l# deleteObject()\l# reset()\l# restore()\l# copy()\l# reset()\l# restore()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder.html"];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 [label="{Tempest::AbstractHolderWith\lLoad\< Data, APIDescriptor \>\n||+ AbstractHolderWithLoad()\l+ load()\l+ load()\l+ load()\l+ load()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l# createObject()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder_with_load.html"];
}
