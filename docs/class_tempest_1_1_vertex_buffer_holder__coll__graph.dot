digraph "Tempest::VertexBufferHolder"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node5 [label="{Tempest::VertexBufferHolder\n||+ VertexBufferHolder()\l+ ~VertexBufferHolder()\l+ load()\l+ load()\l# createObject()\l# deleteObject()\l# allocBuffer()\l# allocBuffer()\l# reset()\l# restore()\l# copy()\l# lockBuffer()\l# bufferData()\l# unlockBuffer()\l# updateBuffer()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Tempest::AbstractHolder\l\< Tempest::VertexBufferBase,\l AbstractAPI::VertexBuffer \>\n|# references\l# pool\l|+ makeManip()\l# AbstractHolder()\l# deleteObject()\l# reset()\l# reset()\l# restore()\l# restore()\l# copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder.html"];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Tempest::AbstractHolderBase\n||+ AbstractHolderBase()\l+ AbstractHolderBase()\l+ ~AbstractHolderBase()\l+ operator=()\l+ device()\l+ device()\l# reset()\l# restore()\l# presentEvent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_abstract_holder_base.html"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" #m_device" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{Tempest::Device\n||+ Device()\l+ Device()\l+ ~Device()\l+ caps()\l+ vendor()\l+ renderer()\l+ clear()\l+ clear()\l+ clear()\l+ clear()\land 25 more...\l# shadingLang()\l# implDraw()\l# implDrawIndexed()\l# assertPaint()\l# applyRs()\l# bind()\l# bind()\l# bind()\l# bind()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1_device.html"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +onRestored" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{Tempest::signal\< Args \>\n||+ signal()\l+ signal()\l+ ~signal()\l+ operator=()\l+ exec()\l+ operator()()\l+ bind()\l+ ubind()\l+ bind()\l+ bind()\l+ bind()\l+ ubind()\l+ ubind()\l+ bindsCount()\l+ removeBinds()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1signal.html",tooltip="signal class, for signals and slots system. "];
  Node10 -> Node9 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{Tempest::Detail::signalBase\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{Tempest::slot\n||# slot()\l# slot()\l# ~slot()\l# operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tempest_1_1slot.html"];
}
